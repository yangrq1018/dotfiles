
# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█
# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu
# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, F, exec, $browser2 # broswer
bind = $mainMod, T, exec, $telegram # chat

# Rofi is toggled on/off if you repeat the key presses
bind = $mainMod, A, exec, pkill -x rofi || $scrPath/rofilaunch.sh d # launch desktop applications
bind = ALT, tab, exec, pkill -x rofi || $scrPath/rofilaunch.sh w # switch between desktop applications
bind = $mainMod, R, exec, pkill -x rofi || $scrPath/rofilaunch.sh f # browse system files

# Audio control
# bindl  = , F10, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
# bindel = , F11, exec, $scrPath/volumecontrol.sh -o d # decrease volume
# bindel = , F12, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioMute, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bindl  = , XF86AudioMicMute, exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
bindel = , XF86AudioLowerVolume, exec, $scrPath/volumecontrol.sh -o d # decrease volume
bindel = , XF86AudioRaiseVolume, exec, $scrPath/volumecontrol.sh -o i # increase volume
bindl  = , XF86AudioPlay, exec, playerctl play-pause
bindl  = , XF86AudioPause, exec, playerctl play-pause
bindl  = , XF86AudioNext, exec, playerctl next
bindl  = , XF86AudioPrev, exec, playerctl previous

# Brightness control
bindel = , XF86MonBrightnessUp, exec, $scrPath/brightnesscontrol.sh i # increase brightness
bindel = , XF86MonBrightnessDown, exec, $scrPath/brightnesscontrol.sh d # decrease brightness
# This is not need on my laptop, it toggles keyboard backlight by pressing Fn+Space
# bindel = , XF86KbdBrightnessUp, exec, brightnessctl -d 'platform::kbd_backlight' set +5% # decrease brightness (keyboard)
# bindel = , XF86KbdBrightnessDown, exec, brightnessctl -d 'platform::kbd_backlight' set -5% # decrease brightness (keyboard)

# Screenshot/Screencapture
$temp_screenshot = /tmp/screenshot.png
# drag to snip an area / click on a window to print it
bind = $mainMod, P, exec, grimblast copysave area $temp_screenshot && swappy -f $temp_screenshot
# frozen screen, drag to snip an area / click on a window to print it
bind = $mainMod CTRL, P, exec, grimblast --freeze copysave area $temp_screenshot && swappy -f $temp_screenshot
# print focused monitor
bind = $mainMod ALT, P, exec, grimblast copysave output $temp_screenshot && swappy -f $temp_screenshot

# Window/Session actions
# manually lock screen
bind = $mainMod, L, exec, $scrPath/lockcontrol.sh
# lock screen on lid open/close
# This could freeze swaylock, denying any input so not using it for now
# bindl = , switch:off:Lid Switch, exec, $scrPath/lockcontrol.sh

# toggle the eDP-1 monitor (laptop monitor) on lid switch
# two models, one for home, one for workplace
$checkExtMon = hyprctl monitors | grep -E 'LG Electronics LG HDR 4K|LG Electronics LG ULTRAFINE'
# disable internal monitor only when there is an external monitor connected
# else it will prevent the computer to suspend.
bindl = , switch:on:Lid Switch, exec, $checkExtMon && hyprctl keyword monitor "eDP-1,disable"
bindl = , switch:off:Lid Switch, exec, hyprctl keyword monitor "eDP-1,preferred,0x0,auto"

# toggle waybar
bind = $CONTROL, ESCAPE, exec, killall waybar || waybar

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
